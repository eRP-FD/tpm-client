#!/usr/bin/env bash

########################################################################################################################

# (C) Copyright IBM Deutschland GmbH 2021
# (C) Copyright IBM Corp. 2021
# SPDX-License-Identifier: CC BY-NC-ND 3.0 DE

########################################################################################################################

# function that takes an error message as parameter, prints it
# to stderr and then exits the script (with a non-zero status code)
#
function error
{
    if [ "$#" != 1 ]; then
        error 'internal error: one parameter required for the "error" function'
    fi

    echo -e "\n\nFatal error: "$1".\n" >&2
    exit 1
}

########################################################################################################################

# function that prints information (to stdout)
# about how to call the script and then exists normally
#
function help
{
    echo -e '
script usage: $0 --image-name IMAGE_NAME [ optional arguments ]\n
Arguments:\n
--help                            this help\n
--image-name [ required ]         name of the Docker image to be built\n
--nexus-username [ optional ]     the Nexus username used for consuming Conan recipes;
                                  if not given, you will be prompted to enter it\n
--nexus-password [ optional ]     the Nexus password used for consuming Conan recipes;
                                  if not given, you will be prompted to enter it;
                                  if this is not a CI build, it might be preferred to enter it later\n
--simulator-port [ optional ]     the TCP port that the HSM simulator will be accessible on;
                                  by default, it is set to 3001\n
'
    exit 0
}

###################################################################################################

# parse arguments
#
while [[ "$#" -gt 0 ]]; do
    case $1 in
        --help) HELP=1;;
        --image-name) IMAGE_NAME="$2"; shift;;
        --nexus-username) NEXUS_USERNAME="$2"; shift ;;
        --nexus-password) NEXUS_PASSWORD="$2"; shift ;;
        --simulator-port) SIMULATOR_PORT="$2"; shift ;;
        *) error "Unknown argument "$1"; see --help for usage"
    esac
    shift
done

########################################################################################################################

# show usage if --help option was given
#
if [ -n "$HELP" ]; then
    help
fi

# image name is mandatory
#
if [ -z "$IMAGE_NAME" ]; then
    error 'image name argument missing; see --help option for usage'
fi

# these are the Nexus credentials, also required
# for the build (properly consuming Conan recipes)
#
if [ -z "$NEXUS_USERNAME" ]; then
    read -p 'Nexus username: ' NEXUS_USERNAME
fi

if [ -z "$NEXUS_PASSWORD" ]; then
    read -sp 'Nexus password: ' NEXUS_PASSWORD
fi

# by default the HSM will run on TCP port 3001
# unless the user chooses differently at image build time
#
if [ -z "$SIMULATOR_PORT" ]; then
    SIMULATOR_PORT='3001'
fi

########################################################################################################################

# save a temporary image name: the one built from the Dockerfile but prior to deploying
#
TEMPORARY_IMAGE_NAME="$IMAGE_NAME-temp"

# location of the Dockerfile (and implicitly the build script's)
#
DOCKER_DIRECTORY=$(dirname $(readlink -f $BASH_SOURCE)) || error 'cannot grab "docker" directory path'

# the build context sent to the Docker daemon
#
BUILD_CONTEXT_DIRECTORY=$(dirname $DOCKER_DIRECTORY)

# build the image
#
DOCKER_BUILDKIT=1 docker build --build-arg NEXUS_USERNAME=$NEXUS_USERNAME \
                               --build-arg NEXUS_PASSWORD=$NEXUS_PASSWORD \
                               --build-arg SIMULATOR_PORT=$SIMULATOR_PORT \
                               --progress=plain                           \
                               -t $IMAGE_NAME                             \
                               -f $DOCKER_DIRECTORY/Dockerfile            \
                               $BUILD_CONTEXT_DIRECTORY || error 'unable to build image; see errors above'

echo -e "\n\nImage '"$IMAGE_NAME"' has been built successfully!\n\n"

########################################################################################################################

/*
 * (C) Copyright IBM Deutschland GmbH 2021
 * (C) Copyright IBM Corp. 2021
 * SPDX-License-Identifier: CC BY-NC-ND 3.0 DE
 */

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef TPM_CLIENT_STORAGEINDEX_H
#define TPM_CLIENT_STORAGEINDEX_H

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <cstdint>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace tpmclient
{

/**
 * Wrapper for an unsigned integer used as an index to access the storage data.
 */
class StorageIndex
{
public:
    using NativeType = std::uint32_t;

    StorageIndex();

    explicit StorageIndex(NativeType index);

    /**
     * Queries whether this index is valid.
     */
    bool isValid() const;

    /**
     * Returns the underlying wrapped type.
     */
    NativeType getNative() const;

    /**
     * Returns the underlying wrapped type.
     */
    NativeType operator*() const;

private:
    NativeType mIndex;
};

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

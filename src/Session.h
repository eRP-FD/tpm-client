#ifndef TPM_CLIENT_SESSION_H
#define TPM_CLIENT_SESSION_H

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <memory>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct TSS_CONTEXT TSS_CONTEXT;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace tpmclient
{

/**
 * TODO TSB
 */
class Session
{
private:
    using RawNativeType = TSS_CONTEXT;

public:
    /**
     * TODO TSB
     */
    using NativeType = RawNativeType*;

    Session();

    /**
     * TODO TSB
     */
    void open();

    /**
     * TODO TSB
     */
    void close();

    /**
     * TODO TSB
     */
    bool isOpen() const;

    /**
     * TODO TSB
     */
    bool isClosed() const;

    /**
     * TODO TSB
     */
    NativeType getNative() const;

    /**
     * TODO TSB
     */
    NativeType operator*() const;

private:
    std::unique_ptr<RawNativeType, void (*)(NativeType)> mSession;
};

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
